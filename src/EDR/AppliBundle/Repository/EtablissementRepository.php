<?php

namespace EDR\AppliBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * EtablissementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EtablissementRepository extends EntityRepository
{
    public function getEtabWithCategory($categoryName, $page, $nbPerPage)
    {
        $query = $this
            ->createQueryBuilder('e')
            ->innerJoin('e.categories', 'c', 'WITH', 'c.nom = :categoryName')
            ->setParameter('categoryName', $categoryName)
            ->addSelect('c')
            ->getQuery()
        ;

        $query
            // On définit l'annonce à partir de laquelle commencer la liste
            ->setFirstResult(($page - 1) * $nbPerPage)
            // Ainsi que le nombre d'annonce à afficher sur une page
            ->setMaxResults($nbPerPage)
        ;

        // Enfin, on retourne l'objet Paginator correspondant à la requête construite
        // (n'oubliez pas le use correspondant en début de fichier)
        return new Paginator($query, true);

        /*$qb = $this->createQueryBuilder('e');

        //jointure avec l'entité Categorie
        $qb
            ->innerJoin('e.categories', 'c', 'WITH', 'c.nom = :categoryName')
            ->setParameter('categoryName', $categoryName)
            ->addSelect('c')
        ;

        return $qb
            ->getQuery()
            ->getResult()
        ;*/
    }

    public function getEtabWithTag($idTag)
    {
        $qb = $this->createQueryBuilder('e');

        //jointure avec l'entité Tag
        $qb
            ->innerJoin('e.tags', 't', 'WITH', 't.id = :idTag')
            ->setParameter('idTag', $idTag)
            ->addSelect('t')
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
}
